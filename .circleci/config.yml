---
version: 2.1

executors:
  molecule-docker:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
  molecule-ec2:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors_molecule/molecule:ec2
    resource_class: medium
  trailing-whitespace:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/trailing-whitespace:latest
    resource_class: small

orbs:
  ansible-lint: orbss/ansible-lint@0.0.3
  aws-cli: circleci/aws-cli@3.1.1
  yamllint: orbss/yamllint@0.0.4

jobs:
  ansible-lint:
    executor: ansible-lint/default
    steps:
      - checkout
      - ansible-lint/execute:
          molecule-playbook-test: true
  molecule-docker:
    executor: molecule-docker
    parameters:
      molecule-image:
        type: string
    steps:
      - checkout
      - run:
          name: Install Molecule and dependencies
          command: |
            pip3 install -r molecule/requirements/docker
      - run:
          name: Test with Molecule
          command: |
            molecule test --scenario-name docker
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_TASK_TIMEOUT: '600'
            MOLECULE_IMAGE: << parameters.molecule-image >>
            PY_COLORS: '1'
          no_output_timeout: 15m
      - run:
          name: Show Ansible version
          command: |
            pip3 list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
      - run:
          name: Show Molecule version
          command: molecule --version
  molecule-ec2:
    executor: molecule-ec2
    parameters:
      molecule-ami-name:
        type: string
      molecule-instance-type:
        type: string
      molecule-ec2-tag:
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
          role-arn: ${AWS_ROLE_ARN}
          role-session-name: circleci_ansible-playbook_jenkins_install
          session-duration: '1800'
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources
          command: |
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")
            AUTHOR_EMAIL=$(git show -s --format='%ae' ${CIRCLE_SHA1})

            echo "export CREATED_BY=${AUTHOR_EMAIL}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=<< parameters.molecule-ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export PLATFORM_NAME=<< parameters.molecule-ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=<< parameters.molecule-ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export TAG_NAME=<< parameters.molecule-ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set EC2 instance type
          command: |
            echo "export INSTANCE_TYPE=<< parameters.molecule-instance-type >>" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set AMI name
          command: |
            echo "export AMI_NAME=<< parameters.molecule-ami-name >>-*" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Test with molecule
          command: |
            molecule test --scenario-name vm
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_TASK_TIMEOUT: '600'
            # AMI_ID: sotred in system environment variables
            # AMI_NAME: stored in CircleCI environment variables
            # AWS_DEFAULT_REGION: sotred in CircleCI environment variables
            # CREATED_BY: stored in CircleCI environment variables
            # EC2_REGION: stored in CircleCI environment variables
            # INSTANCE_TYPE: stored in CircleCI environment variables
            # KEYPAIR_NAME: sotred in CircleCI environment variables
            # PLATFORM_NAME: sotred in CircleCI environment variables
            PROFILE_TASKS_SORT_ORDER: 'none'
            PROFILE_TASKS_TASK_OUTPUT_LIMIT: '200'
            PY_COLORS: '1'
            # SECURITY_GROUP_NAME: sotred in CircleCI environment variables
            # VPC_SUBNET_ID: sotred in CircleCI environment variables
            TZ: 'Asia/Tokyo'
          no_output_timeout: 15m
      - run:
          name: Show Ansible version
          command: |
            pip list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
            ansible --version
      - run:
          name: Show Molecule version
          command: molecule --version
  yamllint:
    executor: yamllint/default
    steps:
      - checkout
      - yamllint/execute
  trailing-whitespace:
    executor: trailing-whitespace
    steps:
      - checkout
      - run:
          name: Execute trailing-whitespace
          command: trailing-whitespace

workflows:
  version: 2.1
  build:
    jobs:
      - trailing-whitespace
      - yamllint:
          requires:
            - trailing-whitespace
      - ansible-lint:
          requires:
            - yamllint
      - molecule-docker:
          matrix:
            parameters:
              molecule-image:
                - 'ghcr.io/docker-images-mamono210/ansible-test/centos-stream8:latest'
          requires:
            - ansible-lint
      - molecule-ec2:
          molecule-ami-name: 'centos-stream8'
          molecule-instance-type: 't2.medium'
          molecule-ec2-tag: 'molecule_jenkins_install_centos_stream8'
          context: AWS_OPENID_CONNECT_TOKENS
          requires:
            - ansible-lint
